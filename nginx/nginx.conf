user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    server {
        server_name localhost.dev;
        listen 80;
        listen 443 ssl;

        ssl_certificate         /etc/ssl/localhost.dev/localhost.dev.crt;
        ssl_certificate_key     /etc/ssl/localhost.dev/localhost.dev.key;

        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Real-IP;
        real_ip_recursive on;

        include /etc/nginx/services/frontend.nginx.conf;

        location /auth/ {
            resolver 127.0.0.11 ipv6=off;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host   $host;
            proxy_set_header    X-Forwarded-Server $host;
            proxy_set_header    X-Forwarded-Port   $server_port;
            proxy_set_header    X-Forwarded-Proto  $scheme;
            proxy_set_header    Upgrade            $http_upgrade;
            proxy_set_header    Connection         "upgrade";

            set $authentik_uri http://authentik:9000;

            proxy_pass $authentik_uri;
        }

        location /api/policies/ {
            resolver 127.0.0.11 ipv6=off;
            set $policy_uri http://grading-policy-service:80;
            proxy_pass $policy_uri;

        }

        include /etc/nginx/services/backend.nginx.conf;

        location /docs/openapi/{
            resolver 127.0.0.11 ipv6=off;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;

            set $openapi http://openapi-docs/;

            proxy_pass $openapi;
        }

        location /docs/ {
            proxy_pass http://docs:80/;
        }

    }



    server {
        server_name localhost;
        listen 80;

        # might need a .wellknown/acme-challenge

        location / {
            return 301 https://localhost.dev$request_uri;
        }

    }

    include /etc/nginx/services/minio.nginx.conf;
}

# These services are only enabled in local mode
stream{
    include /etc/nginx/services/database.nginx.conf;
    include /etc/nginx/services/rabbitmq.nginx.conf;
}
